{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChanger","limitOfPageCount","Math","ceil","pageCounts","i","push","isFirstPage","isLastPage","length","className","cn","disabled","href","onClick","map","page","active","items","from","to","numbers","n","getNumbers","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","indexOfLastItem","indexOfFirstItem","visibleItems","slice","firstItemOnPage","trim","lastItemOnPage","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAUpC,IALK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,cAEMC,EAAmBC,KAAKC,KAAKN,EAAQC,GACrCM,EAAa,GAGVC,EAAI,EAAGA,GAAKJ,EAAkBI,IACrCD,EAAWE,KAAKD,GAGlB,IAAME,EAA8B,IAAhBR,EACdS,EAAaT,IAAgBK,EAAWK,OAE9C,OACE,mCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAChB,CAAEC,SAAUL,IADd,SAGE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,WACHf,EAAc,GAChBC,EAAcD,EAAc,IAPlC,oBAcDK,EAAWW,KAAI,SAAAC,GAAI,OAClB,oBACEN,UAAWC,IAAG,YACZ,CAAEM,OAAQlB,IAAgBiB,IAF9B,SAKE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMd,EAAcgB,IAJ/B,SAMGA,KAREA,MAYT,oBAAIN,UAAWC,IAAG,YAChB,CAAEC,SAAUJ,IADd,SAGE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,WACHf,EAAcK,EAAWK,QAC3BT,EAAcD,EAAc,IAPlC,0BC7DV,IAAMmB,ECLC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQf,KAAKgB,GAGf,OAAOD,EDFKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB6B,EAApB,KAEMC,EAAkBH,EAAe3B,EACjC+B,EAAmBD,EAAkBH,EAErCK,EAAeb,EAAMc,MAAMF,EAAkBD,GAE7CI,EAAkBF,EAAa,GAAGC,OAAO,GAAGE,OAC5CC,EAAiBJ,EAAaA,EAAatB,OAAS,GAAGuB,OAAO,GAAGE,OAQvE,OACE,sBAAKxB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiCkC,EADjC,cACsDE,EADtD,eAC2EjB,EAAMT,OADjF,OAIA,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,MAAOX,EACPY,SApBoC,SAACC,GAC7CZ,GAAiBY,EAAMC,OAAOH,OAC9BT,EAAe,IAaT,UAOE,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOqB,EAAMT,OACbX,QAAS4B,EACT3B,YAAaA,EACbC,cAAe,SAACgB,GAAD,OAAUY,EAAeZ,MAG1C,6BACGe,EAAahB,KAAI,SAAC2B,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YE7DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2e80c456.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { FC } from 'react';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChanger: (page: number) => void,\n}\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChanger,\n}) => {\n  const limitOfPageCount = Math.ceil(total / perPage);\n  const pageCounts = [];\n\n  // eslint-disable-next-line no-plusplus\n  for (let i = 1; i <= limitOfPageCount; i++) {\n    pageCounts.push(i);\n  }\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pageCounts.length;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item',\n          { disabled: isFirstPage })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPage}\n            onClick={() => {\n              if (currentPage > 1) {\n                onPageChanger(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pageCounts.map(page => (\n          <li\n            className={cn('page-item',\n              { active: currentPage === page })}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChanger(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={cn('page-item',\n          { disabled: isLastPage })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPage}\n            onClick={() => {\n              if (currentPage < pageCounts.length) {\n                onPageChanger(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const indexOfLastItem = itemsPerPage * currentPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n\n  const visibleItems = items.slice(indexOfFirstItem, indexOfLastItem);\n\n  const firstItemOnPage = visibleItems[0].slice(-2).trim();\n  const lastItemOnPage = visibleItems[visibleItems.length - 1].slice(-2).trim();\n\n  const handlePageChange:\n  React.ChangeEventHandler<HTMLSelectElement> = (event) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handlePageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChanger={(page) => setCurrentPage(page)}\n      />\n\n      <ul>\n        {visibleItems.map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}